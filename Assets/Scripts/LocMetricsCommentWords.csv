Word,Count
=,102
},51
{,51
if,36
the,30
to,20
of,19
TODO:,17
float,17
==,17
a,16
public,15
new,15
null),14
!=,13
void,13
is,12
End,11
return,10
as,9
else,9
+,8
for,8
GameObject,8
&&,8
in,7
this,7
Vector2.zero;,7
true;,7
GameObject;,7
This,7
+=,6
*,6
are,6
protected,6
If,6
\"\\,6
private,6
and,6
Time.deltaTime;,5
*=,5
all,5
<,5
hit,5
0;,5
\transform.position,\,5
override,5
yield,5
each,5
it,5
false;,5
Update,5
bool,5
I,5
myBody.velocity,4
-=,4
minion,4
minions,4
or,4
<<,4
transform.rotation),4
1,4
add,4
1f);,4
i,4
their,4
enemy,4
on,4
set,4
Piece,4
RaycastHit2D,4
(other.tag,3
transform.rotation,3
\Random.Range(-5f,\,3
||,3
activate,3
5f);,3
other),3
start,3
\Physics2D.Raycast(transform.position,\,3
-,3
spinSpeed;,3
movement,3
not,3
--,3
OnTriggerStay2D(Collider2D,3
so,3
assigned,3
it's,3
Movement,3
>,3
Entity,3
transform;,3
an,3
\"\Enemy"\)\,3
them,3
beginSpawn,3
>=,3
Vector2,3
(hit.collider,3
Check,3
need,3
moveDuration,3
other.tag,3
(myBody.angularVelocity,3
\"\Player"\\,3
some,3
array,3
mask);,2
but,2
Weapon,2
same,2
always,2
Get,2
only,2
\Collider,\,2
unlock,2
make,2
given,2
Stuff,2
\Debug.Log("\I\,2
It,2
0),2
laser,2
null,2
15;,2
Quaternion.identity),2
(other.GetComponent<Health>(),2
[HideInInspector],2
(EnumList.CheckLayer(gameObject),2
\StartCoroutine(DoT(other.GetComponent<Health>(),\,2
AutoSpin,2
then,2
maxSpin,2
\"\Player"\)\,2
\dist,\,2
adding,2
size;,2
method,2
sine,2
!beginSpawn),2
deathTimer,2
if(targets[i],2
Rotation,2
over,2
Time.deltaTime,2
0f;,2
waveCooldown;,2
spawnAlt,2
they,2
bunch,2
\dead,\,2
14;,2
1;,2
instead,2
gameObject.layer,2
Time.time,2
at,2
GetComponent<PartingGift>().repeatSpawn,2
(i,2
lastWave,2
unneeded,2
Weapons,2
\Debug.Log("\Drone\,2
\weapons,\,2
rotateSpeed);,2
%,2
one,2
activeModule.transform.parent,2
spawned,2
\hit:"\\,2
\transform.position),\,2
when,2
current,2
2,2
\transform.rotation.y,\,2
Move,2
\myBody.velocity,\,2
direction,2
point,2
tmpOrigin,2
off,2
would,2
reflectorMask);,2
rotation,2
Find,2
spawns),2
way,2
myBody.angularVelocity,2
1),2
sure,2
minion's,2
0f),2
check,2
here,2
\Destroy(explosion,\,2
my,2
int,2
hit.collider.gameObject.tag);,2
i++),2
IEnumerator,2
Color.green);,2
(other.transform.position,2
Time.timeScale,2
damage));,2
time,2
Consider,2
explosion,2
(transform.parent.gameObject.tag,2
yVar,2
maxSpin),2
from,2
Activate,2
Delegate,2
thing,2
totalDiff,2
has,2
turn,2
creating,2
that,2
Make,2
FixedUpdate,2
dead,2
speed,2
WaitForSeconds(2f);,2
reflectorMask,2
We,1
childRotationSpeed;,1
end,1
activeSpawn,1
mode,1
works,1
base.Move();,1
parentEntity.damageModifier;,1
center,1
thier,1
up,1
while(waveCount,1
duration,1
two,1
maxWaves),1
transform.localScale,1
\speed,\,1
delay);,1
curShrinks,1
\GameObject.FindGameObjectWithTag("\LootSpawn"\).transform.position;\,1
length,1
Do,1
size,1
target),1
\weapon"\);\,1
without,1
transform.parent.GetComponent<Projectile>().playerShot;,1
activeNewWeapon.transform.localPosition,1
Quaternion.identity;,1
Correction,1
Screen,1
scaledParts.startSpeed,1
\locations,\,1
List<GameObject>,1
using,1
Middle,1
touched,1
Text,1
SetUpDefaultMods();,1
activeHealMotes,1
playerShot,1
Rigidbody2D,1
true);,1
activeMinions,1
activeNewWeapon.name,1
\Exists"\);\,1
\//Debug.DrawLine(transform.position,\,1
relfection,1
\(TargetUtils.FindDistance(target,\,1
transform.position,1
InitWeapon,1
followDistance),1
\Instantiate(healMote,\,1
Open,1
GetComponentsInChildren<ColorModule>();,1
c.gameObject.AddComponent<AutoSpin>();,1
properly,1
broke,1
[RequireComponent,1
myShield;,1
scaledParts.startSize,1
autoExplosionColor),1
//transform.position,1
[RequireComponent(typeof(Rigidbody2D))],1
GetComponentInParent<Entity>().GetColor();,1
GetComponentInParent<Entity>();,1
replaces,1
force,1
(duration,1
\Application.LoadLevel("\MainMenu"\);\,1
similar,1
RaycastHit2D();,1
nearColider,1
playerShot;,1
visual,1
Start,1
\one"\);\,1
myPosition;,1
kinds,1
numSpawnMod;,1
hit.collider.transform.rotation;,1
be,1
AuxWeaponMount,1
generate,1
straight,1
parentColor,1
transform.gameObject.tag,1
entire,1
\leaving,\,1
/,1
moveVar;,1
velocity,1
wave,1
foreach,1
base.PlayerShotMovement();,1
\not,\,1
surfaceNormal,1
0.8f;,1
what,1
parentHeatlh.transform.position,1
(transform.parent,1
currently,1
droneScript.damage,1
ones,1
Destroy(other.GetComponent<LookAtTarget>());,1
times,1
target,1
end),1
\Instantiate(EnumList.ExplosionColor(parentColor),\,1
25f;,1
GetComponent<EntityMovement>(),1
3;,1
Destroy(curWeapons[i]);,1
duration);,1
out,1
enemyShotMask,1
things,1
stacking,1
transform.position;,1
\target.transform.position,\,1
SubLoot,1
(moveDuration,1
childSpin,1
spawnRate,1
inRayHit,1
made,1
\"\infinite"\\,1
duration;,1
\transform.Rotate(Vector3.forward,\,1
big,1
levelManager.currentCheckpoint.transform.position;,1
\rotateSpeed,\,1
kind,1
powerups,1
activeItem.transform.localPosition,1
activeTutMod.GetComponentInChildren<Reticle>().myTarget,1
\c.activePrimary.transform.FindChild("\ShotOrigin"\).rotation\,1
targets[i].position;,1
Define,1
Place,1
effect,1
Size,1
have,1
Remove,1
180f));,1
dmg),1
any,1
numExplosions,1
activeSpawn.GetComponent<GalaMob>().SwapRotation();,1
playerShotMask,1
\are,\,1
drop,1
specified,1
\size,\,1
myShield,1
true,1
(spawnAlt,1
targetAquired;,1
reticleScript.targetAquired,1
directly,1
apply,1
go,1
c.GetComponent<AutoSpin>();,1
\activeReticle.transform.SetParent(transform,\,1
enemy's,1
maxSpin;,1
based,1
targets,1
DetermineSpawnRate(GameObject[],1
middle,1
deginated,1
player;,1
enemyScript.difficultyValue;,1
subShots;,1
origin;,1
DoT(Health,1
Color.yellow);,1
reticleScript.lockedOn,1
Spawn,1
Transform,1
basis,1
damage,1
\Vector3(transform.rotation.x,\,1
Debug.Log(other.gameObject.name,1
target.GetComponent<Health>().AdjustHealth(dmg);,1
avoid,1
myParticles.isPlaying),1
curWeapons[i].GetComponent<LookAtTarget>();,1
Maybe,1
(nearColider,1
Scenes,1
\Instantiate(EnumList.ExplosionColor(self.unitColor),\,1
Class,1
Quaternion,1
pre-exist,1
myBody.velocity.y);,1
mySprite.color,1
numWeaponPoints;,1
FullHealth();,1
Doesn't,1
\maxZapDistance,\,1
possitions,1
entry,1
SpawnWaves(),1
after,1
enemyScript,1
\Vector3.zero,\,1
\Instantiate(item,\,1
bools,1
correct,1
transform.parent,1
surfaceNormal);,1
myParticles.isStopped),1
\Exist,\,1
bit,1
getting,1
determine,1
activeTutMod.gameObject;,1
(!isTouching),1
checkPositions,1
Destroy(this),1
needs,1
Activated,1
Rename,1
FindObjectOfType<EntityPlayer>().transform;,1
(explosionParticle,1
\Instantiate(spawns,\,1
Direction.None;,1
speedVar;,1
screen,1
\Mathf.Infinity,\,1
8),1
parentEntity.fullWeaponList.Add(wpnScript);,1
chevHolder.GetComponent<Rigidbody2D>().angularVelocity,1
UI,1
Mid,1
xVar,1
this.GetComponent<Renderer>().enabled,1
LingeringProjectile,1
Wave,1
currentSpawns,1
200f);,1
\Physics2D.OverlapCircle(transform.position,\,1
remove,1
checks,1
player,1
virtual,1
down,1
LookAtTarget,1
isn't,1
Raycast,1
transform.position),1
Child,1
if(myBody.angularVelocity,1
\Random.Range(-200f,\,1
weapon,1
keycode,1
end.GetComponent<LingeringProjectile>();,1
WaitForSeconds(damageInterval);,1
giftBody.angularVelocity,1
Minions,1
why,1
Direction.Directed;,1
probably,1
<=,1
if(origin,1
enemy.GetComponent<Entity>();,1
base.EnemyShotMovement();,1
fix,1
activeLook.target,1
myShotOrigin;,1
targets.Count;,1
activeShield;,1
vortex,1
\false,\,1
false);,1
(myRenderer.isVisible,1
\Debug.Log("\Find\,1
The,1
work,1
damageTimer,1
Thos,1
spawnPoints[spawnAlt].rotation),1
9),1
PlayerShotMovement(),1
/=,1
(minus,1
aim-helpers,1
myWeapon;,1
speedVar,1
myHeal.SetActive(true);,1
location,1
\Instantiate(explosionParticle,\,1
\Vector2(transform.position.x,\,1
EnemyShotMovement(),1
\CameraController.ShakeCam(.05f,\,1
base.FixedUpdate();,1
FixedUpdate(),1
\transform.FindChild("\ShotOrigin"\).rotation;\,1
Collider2D,1
something,1
RigidBody,1
\Vector2.Reflect(-myBody.velocity,\,1
\myAnim.SetTrigger("\Shrink"\);\,1
(!playerShot,1
temporary,1
(playerShot),1
half,1
false,1
\Vector2(0f,\,1
(int,1
Upward,1
shield,1
1f;,1
modTag);,1
SetLayer(),1
scripts,1
burst,1
above,1
List<Transform>();,1
weapons,1
prevent,1
TestRay(),1
Color,1
isDead,1
0.5f);,1
hit.normal;,1
\Destroy(activeExplosion,\,1
(upgradeWave),1
hit),1
Random,1
\Quaternion.FromToRotation(myBody.velocity,\,1
Fixed,1
good,1
\Quaternion.Euler(transform.rotation.x,\,1
piece,1
avoids,1
hacky,1
won't,1
activeItem.transform.parent,1
activeGift.GetComponent<Rigidbody2D>();,1
activeHealMotes.GetComponent<DeathMissileController>().numMissiles,1
Awake,1
Load,1
texts[0].text,1
transform.position.y);,1
too,1
Speed,1
\Vector3.forward),\,1
other.GetComponent<Rigidbody2D>().WakeUp();,1
generated,1
Quaternion.Euler(new,1
tutorial,1
transform.localPosition,1
activationDelay;,1
Not,1
(typeof(Loot))],1
\Instantiate(EnumList.ExplosionColor(GetComponent<Entity>().unitColor),\,1
reduce,1
(getColorModsOnly),1
parent;,1
dist,1
sub-projectiles,1
those,1
with,1
setting,1
Perhaps,1
see,1
DeathFlair(),1
(GameObject,1
Add,1
activeExplosion,1
\pivot,\,1
activeItem,1
chevRotateSpeed,1
hit;,1
items,1
List<GameObject>();,1
List<Transform>,1
0,1
transform.up;,1
can,1
moveDuration;,1
\//Debug.DrawRay(transform.position,\,1
player.weapons.Add(w);,1
\Quaternion.Lerp(transform.rotation,\,1
flag,1
shit,1
other.GetComponent<Health>().AdjustHealth(-healAmount);,1
Mod,1
by,1
laserPoint,1
WaitForSeconds(waveCooldown);,1
childMove.magnitude,1
enemyShot;,1
myParticles.Stop();,1
put,1
could,1
if(moveDuration,1
WaitForSeconds(spawnCooldown);,1
\transform.SetParent(parentWeapon.transform,\,1
myChildren,1
DroneBay,1
becomes,1
do,1
child;,1
numMotes;,1
\Debug.Log("\Starting\,1
reflectedVelocity,1
SpawnHealMotes(GameObject,1
activeTrail.transform.localRotation,1
\Zone"\);\,1
\spawnPoints[spawnAlt].position,\,1
waveCount++;,1
parent,1
noob,1
moveVar,1
childSpin.rotateSpeed,1
maybe,1
curWeapons,1
being,1
enemies,1
positions,1
done,1
reflectedVelocity);,1
\Coroutine"\);\,1
1);,1
hit.collider.GetComponent<Health>(),1
its,1
move,1
if(other.GetComponent<LookAtTarget>(),1
SubClass,1
player.weapons.Remove(oldWeapon);,1
player.GetComponent<Health>().curHealth.ToString();,1
spawnRate;,1
axis,1
\weapon,\,1
deathDelay),1
spawn,1
\"\Weapon"\;\,1
(deathTimer,1
moveOnce,1
(EnumList.ExplosionColor(parentColor),1
RespawnPlayer(),1
\Destroy(gameObject,\,1
upgradefinished;,1
Reflect(RaycastHit2D,1
child.parent,1
myParticles.Play();,1
deathExplosion,1
\so,\,1
hack,1
testing,1
more,1
shop,1
Shut,1
DirectedTowardOwner(),1
CheckEmptySpaces(),1
[RequireComponent(typeof(LookAtTarget))],1
transform.parent.gameObject.tag;,1
enough,1
very,1
\Random.Range(0.3f,\,1
\other.transform.up,\,1
Start(),1
translating,1
7.5f;,1
\.01f,\,1
GetComponent<EntityMovement>().speed,1
growthAmount;,1
Turn,1
Upgrade,1
base.Start();,1
\it,\,1
if(hit.collider,1
having,1
Layer,1
giftBody,1
aimhelpers,1
3f;,1
\Debug.DrawRay(transform.position,\,1
activeNewWeapon.transform.parent,1
isComplete;,1
Nothing,1
for(int,1
postion,1
\time,\,1
stack,1
Projectile[],1
Quit,1
use,1
Color.white,1
AssignChildrenMovement();,1
\Random.Range(-0.5f,\,1
pos,1
if(!myRenderer.isVisible,1
FindObjectOfType<EntityPlayer>();,1
activeBoom.transform.localScale,1
maxSpawn;,1
spawner.waves[spawner.waveCount].IsWaveFinished(true);,1
\target,\,1
activeLook,1
isTouching,1
right,1
\"\Health:\,1
targeting,1
until,1
CoRoutines,1
Quaternion.AngleAxis(Time.deltaTime,1
\and,\,1
myShield.transform.rotation,1
TriShot,1
unlock;,1
\other.transform.position,\,1
player.transform;,1
\Physics2D.Raycast(other.transform.position,\,1
